/** * Created by bensimms on 23/12/2013. */import com.enterprisedt.net.ftp.FTPException;import gifAnimation.*;import processing.core.PApplet;import processing.core.PImage;import processing.video.Capture;import sun.security.ntlm.Server;import java.io.File;import java.io.IOException;public class TheTinyGifMaker extends PApplet {    static public void main(String args[]) {        PApplet.main("TheTinyGifMaker");    }    PImage img, img1, img2, img3;    processing.video.Capture camera;    File folder;    boolean photoDeveloped = false;    String folderLocation = "";    int currentFrame = 0;          //Used to count how many frames in the animation always start from zero.    public void setup() {        img1 = loadImage("resources/mainScreen.png");        img2 = loadImage("resources/animationExported.png");        img3 = loadImage("resources/splash.png");        camera = new Capture(this, 128, 96, 25);        size(200, 200);        image(img3, 0, 0);    }    public void keyPressed() {        //Select a folder        if ((key == 's') || (key == 'S')) {            camera.start();            image(img1, 0, 0);        }        //Take a snapshot if the spacebar is pressed and increase the current frame count by one.        if (key == ' ') {            // camera.save(folderLocation + "/Frames/" + "Image" + currentFrame + ".gif");            camera.save("Image" + currentFrame + ".gif");            currentFrame++;        }        //Stop the camera from filming and begin the gif creation process.        if (key == 10) {            createImage();        }    }    //Load in all frames taken and create the gif image.    public void createImage() {        String exportedAnimation = folderLocation + "public_html/bensimms/TheTinyGifMaker/image.gif";        GifMaker gifExport = new GifMaker(this, exportedAnimation, 10);        gifExport.setRepeat(0);        if (photoDeveloped == false) {            int imageCount = 0;            while (imageCount < currentFrame) {                img = loadImage(folderLocation + "Image" + imageCount + ".gif");                gifExport.addFrame(img);                gifExport.setDelay(100);                imageCount++;            }                if (imageCount == currentFrame) {                    delay(1000);                    ServerConnection serverConnection = new ServerConnection();                    serverConnection.connectToServer(exportedAnimation);                    camera.stop();                    super.stop();                    image(img2, 0, 0);                }        }    }    // Stream the live video feed.    public void draw() {        if (camera.available() == true) {            camera.read();            image(camera, 35, 20);        }    }}